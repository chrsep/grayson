# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Test

on:
  pull_request:
    branches: [ main, develop ]

jobs:
  cancel-previous:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: use node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: install and cache deps
        uses: bahmutov/npm-install@v1
      - name: Create sentry.properties
        run: |
          echo defaults.url=$SENTRY_URL >> sentry.properties
          echo defaults.org=$SENTRY_ORG >> sentry.properties
          echo defaults.project=$SENTRY_PROJECT >> sentry.properties
          echo auth.token=$SENTRY_AUTH_TOKEN >> sentry.properties
        env:
          SENTRY_URL: https://sentry.io/
          SENTRY_ORG: grayson-ga
          SENTRY_PROJECT: grayson
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      - name: Create sentry.properties
        run: |
          echo $WIREGUARD >> gh-action
          wg-quick up gh-action
        env:
          WIREGUARD: ${{ secrets.WIREGUARD  }}
      - name: Build grayson
        run: yarn run build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Install and cache deps
        uses: bahmutov/npm-install@v1
      - run: yarn run lint

  # TODO: enable when we have better image processing. Check always failed when importing image.
  #  check:
  #    runs-on: ubuntu-latest
  #    steps:
  #      - uses: actions/checkout@v2
  #      - uses: actions/cache@v2
  #        id: npm-cache # use this to check for `cache-hit` (`steps.npm-cache.outputs.cache-hit != 'true'`)
  #        with:
  #          path: |
  #            ~/.npm
  #          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}-v1
  #          restore-keys: |
  #            ${{ runner.os }}-npm-
  #      - name: Use Node.js 15
  #        uses: actions/setup-node@v2
  #        with:
  #          node-version: 15
  #      - run: npm install
  #      - run: npm run build
  #      - run: npm run check
#  test:
#    runs-on: ubuntu-latest
#
#    services:
#      redis:
#        image: redis:alpine
#        ports:
#          - 6379:6379
#      postgres:
#        image: postgres:latest
#        env:
#          POSTGRES_PASSWORD: postgres
#          POSTGRES_USER: postgres
#        ports:
#          - 5432:5432
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
#
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/cache@v2
#        id: pnpm-cache # use this to check for `cache-hit` (`steps.npm-cache.outputs.cache-hit != 'true'`)
#        with:
#          path: |
#            ~/.pnpm-store
#          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/yarn.lock') }}-v1
#          restore-keys: |
#            ${{ runner.os }}-pnpm-
#      - name: Use Node.js 16
#        uses: actions/setup-node@v2
#        with:
#          node-version: 16
#      - run: npm -g install pnpm
#      - run: pnpm install
#      - run: pnpm run build
#      - run: pnpm run prisma:migrate-prod
#      - run: pnpm run dev &
#      - run: "pnpm run test:wait-on"
#      - run: pnpm run cy:run
#      - uses: actions/upload-artifact@v2
#        if: always()
#        with:
#          name: e2e-screenshots
#          path: ./cypress/videos
